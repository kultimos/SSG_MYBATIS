<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- Mapper接口对应映射文件
    mapper接口和映射文件要保持两个一致
    1.mapper接口全类名和映射文件namespace一致
    2.mapper接口的方法名和映射文件sql的id保持一致
-->
<mapper namespace="com.kul.pojo.mapper.SQLMapper">
<!--    在进行模糊查询时${} 和 #{} 是存在区别的,我们这里一共有三种书写方式,我比较喜欢concat这种-->
<!--             SELECT * FROM t_user WHERE username LIKE '%${username}%'-->
<!--             select * from t_user where username like "%"#{username}"%"-->
    <select id="selectByLike" resultType="User">
        select * from t_user where username like concat("%",#{username},"%")
    </select>

    <select id="batchDelete" parameterType="string">
        delete from t_user where username = #{username}
    </select>

    <select id="deleteIn" parameterType="list">
        delete from t_user where id in <foreach collection="list" item="id" open="(" separator="," close=")">#{id}</foreach>
    </select>

<!--    这里解释一下为什么用的是${},因为我们传入的参数是一个字符串,所以他的形式是 "参数"
如果我们使用#{},那么作为占位符,它将把 "参数" 整个copy到sql语句中,但是我们查表的时候是不需要给表添加双引号的,这会导致报错
而${},我们在平时使用时会 '${参数}' 这样使用,因为是字符串拼接,所以用的时候都带着引号,所以如果是
'${参数}'  实际上等价于  "参数" ;那么如果把单引号去掉,此时查询表的时候,表名不就是一个符合sql规范的表名了嘛！
这种依赖于表名查询的问题通常是一个数据量极大的单表分成了多张表之后延伸出的查询问题,需要记一下-->
    <select id="selectByTableName" parameterType="string" resultType="User">
        select * from ${tableName}
    </select>


<!--  useGeneratedKeys:表示当前sql使用了自增的主键 keyProperty:明确自增的主键名 -->
    <insert id="insertAutoKey" useGeneratedKeys="true" keyProperty="id">
        insert into t_user values (null,#{userName},#{password},#{age},#{sex},#{email})
    </insert>
</mapper>