<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- Mapper接口对应映射文件
    mapper接口和映射文件要保持两个一致
    1.mapper接口全类名和映射文件namespace一致
    2.mapper接口的方法名和映射文件sql的id保持一致
-->
<mapper namespace="com.kul.mapper.EmpMapper">

<!--    最简单的一种处理数据库和类中字段不一致的方法,就是起别名,将数据库查询结果的对应列起别名为idea中类的属性名来实现映射
        这种依然适用于多表联查时将最终结果数据起别名然后映射到类中,这个类可以不是一个数据库表的映射类,只是一个用来接收查询结果的类
-->
<!--    <select id="selectT" resultType="Emp">-->
<!--        select eid,emp_name as empName,age,sex,email,did  from t_emp-->
<!--    </select>-->

<!--  自定义resultMap来处理数据表和类之间的字段问题,这里建议是把每个字段都写上
      id:表示该自定义resultMap的唯一标识
      type:表示该自定义resultMap映射的类的全类名
      但是呢,相比于处理单个表与类之间的字段不一致,我们更多时候是用resultMap来处理一对多、多对一的结果映射问题
 -->
    <resultMap id="empResultMap" type="Emp">
        <id property="eid" column="eid"></id>
        <id property="empName" column="emp_name"></id>
        <id property="email" column="email"></id>
        <id property="sex" column="sex"></id>
        <id property="age" column="age"></id>
        <id property="did" column="did"></id>
    </resultMap>

<!--  使用自定义的resultMap来将数据映射到类中 -->
    <select id="selectT" resultMap="empResultMap">
        select *  from t_emp
    </select>
</mapper>